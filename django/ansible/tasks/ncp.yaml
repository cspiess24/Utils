---
- name: ncp | Add yum repository
  yum:
    name: https://centos7.iuscommunity.org/ius-release.rpm
    state: present

- name: ncp | ensure a list of packages installed
  yum:
    name: "{{ packages }}"
  vars:
    packages:
    - httpd24u
    - httpd24u-mod_ssl
    - python36u
    - python36u-pip
    - python36u-mod_wsgi
    - git

- name: ncp | clone repo
  git:
    repo: "https://{{ gituser }}:{{ gitpassword }}@bitbucket.org/cspiess24/ncp.git"
    dest: /opt/ncp
    accept_hostkey: yes
    force: yes
  notify:
    - restart apache

- name: ncp | install ncp requirements
  pip:
    requirements: /opt/ncp/requirements.txt
    virtualenv: /opt/ncp/venv
    virtualenv_command: /usr/bin/python3.6 -m venv
  notify:
    - restart apache

- name: ncp | copy configuration template
  template:
    src: ../templates/configuration.py.j2
    dest: /opt/ncp/ncp/ncp/configuration.py
    owner: bin
    group: wheel
    mode: 0644
  notify:
    - restart apache

- name: ncp | copy django http config
  copy:
    src: ../files/django.conf
    dest: /etc/httpd/conf.d/django.conf
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify:
    - restart apache

- name: ncp | Create logs directory
  file:
    path: /opt/ncp/ncp/logs
    state: directory
    owner: apache
    group: apache
    mode: 0764

- name: ncp | create log files
  copy:
    content: ""
    dest: "{{ item }}"
    force: no
    group: apache
    owner: root
    mode: 0770
  with_items:
    - /opt/ncp/ncp/logs/deployment.log
    - /opt/ncp/ncp/logs/django.log

- name: ncp | run database migrations
  django_manage:
    command: migrate
    app_path: /opt/ncp/ncp
    settings: ncp.settings
    pythonpath: /usr/bin/python3.6
    virtualenv: /opt/ncp/venv

- name: ncp | django collectstatic
  django_manage:
    command: collectstatic
    app_path: /opt/ncp/ncp
    settings: ncp.settings
    pythonpath: /usr/bin/python3.6
    virtualenv: /opt/ncp/venv

- name: ncp | check if django superuser exists
  django_manage:
    command: shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); print(User.objects.filter(username='admin').exists())"
    app_path: /opt/ncp/ncp
    settings: ncp.settings
    pythonpath: /usr/bin/python3.6
    virtualenv: /opt/ncp/venv
  register: user_exists

- name: ncp | create django superuser
  django_manage:
    command: shell -c "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('admin', 'admin@myproject.com', '{{ lookup('password', '/tmp/dsu_password') }}')"
    app_path: /opt/ncp/ncp
    settings: ncp.settings
    pythonpath: /usr/bin/python3.6
    virtualenv: /opt/ncp/venv
  when: user_exists.out.find("False") != -1

- name: ncp | start service and enable at boot
  service:
    name: httpd
    state: started
    enabled: yes
